// BOOTSTRAP CODE
@256
D=A
@SP
M=D
@Sys.init1
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init1)
//FUNCTION MAIN.FIBONACCI 0
(Main.fibonacci)
//PUSH ARGUMENT 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LT3
D;JLT
@SP
A=M-1
M=0
@END3
0;JMP
(LT3)
@SP
A=M-1
M=-1
(END3)
//IF-GOTO IF_TRUE
@SP
M=M-1
A=M
D=M
@IF_TRUE
D;JNE
//GOTO IF_FALSE
@IF_FALSE
0;JMP
//LABEL IF_TRUE
(IF_TRUE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURN
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
M=M-1
A=M
D=M
@THAT
M=D
@FRAME
M=M-1
A=M
D=M
@THIS
M=D
@FRAME
M=M-1
A=M
D=M
@ARG
M=D
@FRAME
M=M-1
A=M
D=M
@LCL
M=D
@RET
A=M
0;JMP
//LABEL IF_FALSE
(IF_FALSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//CALL MAIN.FIBONACCI 1
@Main.fibonacci13
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci13)
//PUSH ARGUMENT 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//CALL MAIN.FIBONACCI 1
@Main.fibonacci17
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci17)
//ADD
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
//RETURN
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
M=M-1
A=M
D=M
@THAT
M=D
@FRAME
M=M-1
A=M
D=M
@THIS
M=D
@FRAME
M=M-1
A=M
D=M
@ARG
M=D
@FRAME
M=M-1
A=M
D=M
@LCL
M=D
@RET
A=M
0;JMP
//FUNCTION SYS.INIT 0
(Sys.init)
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//CALL MAIN.FIBONACCI 1
@Main.fibonacci2
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci2)
//LABEL WHILE
(WHILE)
//GOTO WHILE
@WHILE
0;JMP
(END)
@END
0;JMP
