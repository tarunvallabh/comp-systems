function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto IF_TRUE_1
goto IF_FALSE_3
label IF_TRUE_1
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto IF_END_2
label IF_FALSE_3
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label IF_END_2
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto IF_TRUE_4
goto IF_FALSE_6
label IF_TRUE_4
push this 4
push this 5
add
pop this 4
goto IF_END_5
label IF_FALSE_6
push this 4
push this 6
add
pop this 4
push this 9
if-goto IF_TRUE_7
goto IF_FALSE_9
label IF_TRUE_7
push this 7
if-goto IF_TRUE_10
goto IF_FALSE_12
label IF_TRUE_10
push this 0
push constant 4
add
pop this 0
goto IF_END_11
label IF_FALSE_12
push this 1
push constant 4
add
pop this 1
label IF_END_11
goto IF_END_8
label IF_FALSE_9
push this 7
if-goto IF_TRUE_13
goto IF_FALSE_15
label IF_TRUE_13
push this 0
push constant 4
sub
pop this 0
goto IF_END_14
label IF_FALSE_15
push this 1
push constant 4
sub
pop this 1
label IF_END_14
label IF_END_8
label IF_END_5
push this 8
if-goto IF_TRUE_16
goto IF_FALSE_18
label IF_TRUE_16
push this 7
if-goto IF_TRUE_19
goto IF_FALSE_21
label IF_TRUE_19
push this 1
push constant 4
add
pop this 1
goto IF_END_20
label IF_FALSE_21
push this 0
push constant 4
add
pop this 0
label IF_END_20
goto IF_END_17
label IF_FALSE_18
push this 7
if-goto IF_TRUE_22
goto IF_FALSE_24
label IF_TRUE_22
push this 1
push constant 4
sub
pop this 1
goto IF_END_23
label IF_FALSE_24
push this 0
push constant 4
sub
pop this 0
label IF_END_23
label IF_END_17
push this 0
push this 10
gt
not
if-goto IF_TRUE_25
goto IF_FALSE_27
label IF_TRUE_25
push constant 1
pop this 14
push this 10
pop this 0
goto IF_END_26
label IF_FALSE_27
label IF_END_26
push this 0
push this 11
lt
not
if-goto IF_TRUE_28
goto IF_FALSE_30
label IF_TRUE_28
push constant 2
pop this 14
push this 11
pop this 0
goto IF_END_29
label IF_FALSE_30
label IF_END_29
push this 1
push this 12
gt
not
if-goto IF_TRUE_31
goto IF_FALSE_33
label IF_TRUE_31
push constant 3
pop this 14
push this 12
pop this 1
goto IF_END_32
label IF_FALSE_33
label IF_END_32
push this 1
push this 13
lt
not
if-goto IF_TRUE_34
goto IF_FALSE_36
label IF_TRUE_34
push constant 4
pop this 14
push this 13
pop this 1
goto IF_END_35
label IF_FALSE_36
label IF_END_35
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto IF_TRUE_37
goto IF_FALSE_39
label IF_TRUE_37
push constant 10
pop local 4
goto IF_END_38
label IF_FALSE_39
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto IF_TRUE_40
goto IF_FALSE_42
label IF_TRUE_40
push constant 20
pop local 4
goto IF_END_41
label IF_FALSE_42
push constant 5
pop local 4
label IF_END_41
label IF_END_38
push this 14
push constant 1
eq
if-goto IF_TRUE_43
goto IF_FALSE_45
label IF_TRUE_43
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_44
label IF_FALSE_45
push this 14
push constant 2
eq
if-goto IF_TRUE_46
goto IF_FALSE_48
label IF_TRUE_46
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_47
label IF_FALSE_48
push this 14
push constant 3
eq
if-goto IF_TRUE_49
goto IF_FALSE_51
label IF_TRUE_49
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto IF_END_50
label IF_FALSE_51
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label IF_END_50
label IF_END_47
label IF_END_44
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
